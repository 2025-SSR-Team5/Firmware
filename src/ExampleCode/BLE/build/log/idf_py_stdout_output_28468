Command: ninja all
[1/10] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\GitHub\Firmware\src\ExampleCode\BLE\build\bootloader\esp-idf\esptool_py && C:\Users\takeu\.espressif\python_env\idf5.5_py3.11_env\Scripts\python.exe C:/Users/takeu/esp/v5.5/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/GitHub/Firmware/src/ExampleCode/BLE/build/bootloader/bootloader.bin"
Bootloader binary size 0x6680 bytes. 0x980 bytes (8%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/ble.cpp.obj
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating esp-idf/esp_system/ld/sections.ld
[7/10] Building C object CMakeFiles/ble.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable ble.elf
[9/10] Generating binary image from built executable
esptool.py v4.10.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/GitHub/Firmware/src/ExampleCode/BLE/build/ble.bin
[10/10] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\GitHub\Firmware\src\ExampleCode\BLE\build\esp-idf\esptool_py && C:\Users\takeu\.espressif\python_env\idf5.5_py3.11_env\Scripts\python.exe C:/Users/takeu/esp/v5.5/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/GitHub/Firmware/src/ExampleCode/BLE/build/partition_table/partition-table.bin C:/GitHub/Firmware/src/ExampleCode/BLE/build/ble.bin"
ble.bin binary size 0xa90c0 bytes. Smallest app partition is 0x100000 bytes. 0x56f40 bytes (34%) free.
