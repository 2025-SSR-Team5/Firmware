[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\Firmware\src\ExampleCode\chassis\build\bootloader\esp-idf\esptool_py && D:\Espressif\python_env\idf5.3_py3.12_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/Firmware/src/ExampleCode/chassis/build/bootloader/bootloader.bin"
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/7] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/chassis.cpp.obj
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable chassis.elf
[6/7] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/Firmware/src/ExampleCode/chassis/build/chassis.bin
[7/7] cmd.exe /C "cd /D D:\Firmware\src\ExampleCode\chassis\build\esp-idf\esptool_py && D:\Espressif\python_env\idf5.3_py3.12_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/Firmware/src/ExampleCode/chassis/build/partition_table/partition-table.bin D:/Firmware/src/ExampleCode/chassis/build/chassis.bin"
chassis.bin binary size 0xe0bb0 bytes. Smallest app partition is 0x100000 bytes. 0x1f450 bytes (12%) free.
