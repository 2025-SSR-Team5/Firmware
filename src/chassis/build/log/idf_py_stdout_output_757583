[1/10] Performing build step for 'bootloader'
[1/1] cd /home/issaimaru/esp/2025-SSR-Team5/Firmware/src/chassis/build/bootloader/esp-idf/esptool_py && /home/issaimaru/.espressif/python_env/idf5.4_py3.12_env/bin/python /home/issaimaru/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/issaimaru/esp/2025-SSR-Team5/Firmware/src/chassis/build/bootloader/bootloader.bin
Bootloader binary size 0x5220 bytes. 0x2de0 bytes (36%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/chassis.cpp.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable chassis.elf
[8/10] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/issaimaru/esp/2025-SSR-Team5/Firmware/src/chassis/build/chassis.bin
[9/10] cd /home/issaimaru/esp/2025-SSR-Team5/Firmware/src/chassis/build/esp-idf/esptool_py && /home/issaimaru/.espressif/python_env/idf5.4_py3.12_env/bin/python /home/issaimaru/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/issaimaru/esp/2025-SSR-Team5/Firmware/src/chassis/build/partition_table/partition-table.bin /home/issaimaru/esp/2025-SSR-Team5/Firmware/src/chassis/build/chassis.bin
chassis.bin binary size 0x37720 bytes. Smallest app partition is 0x100000 bytes. 0xc88e0 bytes (78%) free.
[9/10] cd /home/issaimaru/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/issaimaru/esp/esp-idf -D "SERIAL_TOOL=/home/issaimaru/.espressif/python_env/idf5.4_py3.12_env/bin/python;;/home/issaimaru/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/issaimaru/esp/2025-SSR-Team5/Firmware/src/chassis/build -P /home/issaimaru/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyACM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 chassis.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.9.0
Serial port /dev/ttyACM3
Connecting.....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: e4:b0:63:b2:cd:24
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00047fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21024 bytes to 13391...
Writing at 0x00000000... (100 %)
Wrote 21024 bytes (13391 compressed) at 0x00000000 in 0.6 seconds (effective 274.6 kbit/s)...
Hash of data verified.
Compressed 227104 bytes to 122606...
Writing at 0x00010000... (12 %)
Writing at 0x0001c7f0... (25 %)
Writing at 0x0002300c... (37 %)
Writing at 0x000296ff... (50 %)
Writing at 0x0002f9f2... (62 %)
Writing at 0x000370e1... (75 %)
Writing at 0x0003df40... (87 %)
Writing at 0x000445cd... (100 %)
Wrote 227104 bytes (122606 compressed) at 0x00010000 in 2.9 seconds (effective 636.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 438.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
