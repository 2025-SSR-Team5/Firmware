Command: ninja flash
[1/12] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\GitHub\Firmware\src\ESP32\build\bootloader\esp-idf\esptool_py && C:\Users\takeu\.espressif\python_env\idf5.5_py3.11_env\Scripts\python.exe C:/Users/takeu/esp/v5.5/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/GitHub/Firmware/src/ESP32/build/bootloader/bootloader.bin"
Bootloader binary size 0x6680 bytes. 0x980 bytes (8%) free.
[2/12] No install step for 'bootloader'
[3/12] Completed 'bootloader'
[4/12] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj
In file included from C:/GitHub/Firmware/src/ESP32/main/main.cpp:9:
C:/GitHub/Firmware/src/ESP32/main/bleserver.hpp:59:9: warning: missing initializer for member 'esp_ble_adv_params_t::peer_addr' [-Wmissing-field-initializers]
   59 |         };
      |         ^
C:/GitHub/Firmware/src/ESP32/main/bleserver.hpp:59:9: warning: missing initializer for member 'esp_ble_adv_params_t::peer_addr_type' [-Wmissing-field-initializers]
C:/GitHub/Firmware/src/ESP32/main/main.cpp:59:12: warning: missing initializer for member 'rct::PidGain::ki' [-Wmissing-field-initializers]
   59 |   PidGain{0},//速度のゲイン
      |            ^
C:/GitHub/Firmware/src/ESP32/main/main.cpp:59:12: warning: missing initializer for member 'rct::PidGain::kd' [-Wmissing-field-initializers]
C:/GitHub/Firmware/src/ESP32/main/main.cpp:60:14: warning: missing initializer for member 'rct::PidGain::ki' [-Wmissing-field-initializers]
   60 |   PidGain{0.1}//位置のゲイン
      |              ^
C:/GitHub/Firmware/src/ESP32/main/main.cpp:60:14: warning: missing initializer for member 'rct::PidGain::kd' [-Wmissing-field-initializers]
[5/12] Building CXX object esp-idf/ToF_Lidar/CMakeFiles/__idf_ToF_Lidar.dir/Lidar.cpp.obj
[6/12] Linking C static library esp-idf\ToF_Lidar\libToF_Lidar.a
[7/12] Linking C static library esp-idf\main\libmain.a
[8/12] Generating esp-idf/esp_system/ld/sections.ld
[9/12] Linking CXX executable esp32.elf
[10/12] Generating binary image from built executable
esptool.py v4.10.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/GitHub/Firmware/src/ESP32/build/esp32.bin
[11/12] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\GitHub\Firmware\src\ESP32\build\esp-idf\esptool_py && C:\Users\takeu\.espressif\python_env\idf5.5_py3.11_env\Scripts\python.exe C:/Users/takeu/esp/v5.5/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/GitHub/Firmware/src/ESP32/build/partition_table/partition-table.bin C:/GitHub/Firmware/src/ESP32/build/esp32.bin"
esp32.bin binary size 0xf47d0 bytes. Smallest app partition is 0x100000 bytes. 0xb830 bytes (4%) free.
Warning: The smallest app partition is nearly full (4% free space left)!
[11/12] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\takeu\esp\v5.5\esp-idf\components\esptool_py && C:\Users\takeu\.espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/Users/takeu/esp/v5.5/esp-idf -D SERIAL_TOOL=C:/Users/takeu/.espressif/python_env/idf5.5_py3.11_env/Scripts/python.exe;;C:/Users/takeu/esp/v5.5/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/GitHub/Firmware/src/ESP32/build -P C:/Users/takeu/esp/v5.5/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM5 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 esp32.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.10.dev2
Serial port COM5
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: ec:e3:34:90:d8:ec
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00104fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26240 bytes to 16487...
Writing at 0x00001000... (50 %)
Writing at 0x000075fb... (100 %)
Wrote 26240 bytes (16487 compressed) at 0x00001000 in 0.7 seconds (effective 282.9 kbit/s)...
Hash of data verified.
Compressed 1001424 bytes to 582624...
Writing at 0x00010000... (2 %)
Writing at 0x0001edaa... (5 %)
Writing at 0x0002f28c... (8 %)
Writing at 0x00039d82... (11 %)
Writing at 0x000435f0... (13 %)
Writing at 0x00048f09... (16 %)
Writing at 0x0004ef17... (19 %)
Writing at 0x00054ce8... (22 %)
Writing at 0x0005aa1b... (25 %)
Writing at 0x0006065d... (27 %)
Writing at 0x00066391... (30 %)
Writing at 0x0006c197... (33 %)
Writing at 0x00072f84... (36 %)
Writing at 0x00078dd7... (38 %)
Writing at 0x0007eee0... (41 %)
Writing at 0x000852a6... (44 %)
Writing at 0x0008b5d0... (47 %)
Writing at 0x0009158e... (50 %)
Writing at 0x000975e0... (52 %)
Writing at 0x0009d5b1... (55 %)
Writing at 0x000a392e... (58 %)
Writing at 0x000a9723... (61 %)
Writing at 0x000af6da... (63 %)
Writing at 0x000b5084... (66 %)
Writing at 0x000babf8... (69 %)
Writing at 0x000c0567... (72 %)
Writing at 0x000c608a... (75 %)
Writing at 0x000cbade... (77 %)
Writing at 0x000d2777... (80 %)
Writing at 0x000db60b... (83 %)
Writing at 0x000e2b8d... (86 %)
Writing at 0x000e9e2a... (88 %)
Writing at 0x000ef9ee... (91 %)
Writing at 0x000f4e0e... (94 %)
Writing at 0x000faba5... (97 %)
Writing at 0x00100ed5... (100 %)
Wrote 1001424 bytes (582624 compressed) at 0x00010000 in 14.1 seconds (effective 569.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 407.1 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
